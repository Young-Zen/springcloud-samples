<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.sz.springcloudsamples</groupId>
		<artifactId>spring-cloud-demo</artifactId>
		<version>1.0.0-SNAPSHOT</version>
	</parent>
	<groupId>com.sz.springcloudsamples.spring-cloud-demo</groupId>
	<artifactId>demo-web</artifactId>
	<packaging>jar</packaging>

	<name>demo-web</name>
	<description>Web module for demo project</description>

	<dependencies>
		<dependency>
			<groupId>com.sz.springcloudsamples.spring-cloud-demo</groupId>
			<artifactId>demo-service</artifactId>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>${docker.maven.version}</version>
				<configuration>
					<imageName>${docker.repository.url}/${project.artifactId}</imageName>
					<baseImage>openjdk:8</baseImage>
					<imageTags>
						<imageTag>${project.version}</imageTag>
						<imageTag>latest</imageTag>
					</imageTags>
					<!--<entryPoint>["java", "-jar", "/${project.build.finalName}.jar"]</entryPoint>-->
					<!--<entryPoint>java -jar -server -XX:+HeapDumpOnOutOfMemoryError -Duser.timezone=GMT+08 $JAVA_OPTS /${project.build.finalName}.jar</entryPoint>-->
					<entryPoint>["sh", "start.sh", "/${project.build.finalName}.jar"]</entryPoint>
					<!-- copy the service's jar file from target into the root directory of the image -->
					<resources>
						<resource>
							<targetPath>/</targetPath>
							<directory>${project.build.directory}</directory>
							<include>${project.build.finalName}.jar</include>
						</resource>
						<resource>
							<targetPath>/</targetPath>
							<directory>docker</directory>
							<include>start.sh</include>
						</resource>
					</resources>
					<serverId>docker-hosted</serverId>
					<registryUrl>${docker.repository.url}</registryUrl>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>